/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFT, NFTInterface } from "../../contracts/NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "crowdsales",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crowdsale",
        type: "address",
      },
    ],
    name: "disableCrowdsale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crowdsale",
        type: "address",
      },
    ],
    name: "enableCrowdsale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021ae380380620021ae83398101604081905262000034916200025a565b8251839083906200004d906000906020850190620000e7565b50805162000063906001906020840190620000e7565b505050620000806200007a6200009160201b60201c565b62000095565b6001600b55600c55506200030a9050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f590620002cd565b90600052602060002090601f01602090048101928262000119576000855562000164565b82601f106200013457805160ff191683800117855562000164565b8280016001018555821562000164579182015b828111156200016457825182559160200191906001019062000147565b506200017292915062000176565b5090565b5b8082111562000172576000815560010162000177565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b557600080fd5b81516001600160401b0380821115620001d257620001d26200018d565b604051601f8301601f19908116603f01168101908282118183101715620001fd57620001fd6200018d565b816040528381526020925086838588010111156200021a57600080fd5b600091505b838210156200023e57858201830151818301840152908201906200021f565b83821115620002505760008385830101525b9695505050505050565b6000806000606084860312156200027057600080fd5b83516001600160401b03808211156200028857600080fd5b6200029687838801620001a3565b94506020860151915080821115620002ad57600080fd5b50620002bc86828701620001a3565b925050604084015190509250925092565b600181811c90821680620002e257607f821691505b602082108114156200030457634e487b7160e01b600052602260045260246000fd5b50919050565b611e94806200031a6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636c0360eb116100f9578063a22cb46511610097578063d5abeb0111610071578063d5abeb0114610370578063dd1e2e0f14610379578063e985e9c51461039c578063f2fde38b146103d857600080fd5b8063a22cb46514610337578063b88d4fde1461034a578063c87b56dd1461035d57600080fd5b80638ca6b72f116100d35780638ca6b72f146102f85780638da5cb5b1461030b57806394bf804d1461031c57806395d89b411461032f57600080fd5b80636c0360eb146102d557806370a08231146102dd578063715018a6146102f057600080fd5b8063291d64901161016657806342842e0e1161014057806342842e0e146102895780634f6ccce71461029c57806355f804b3146102af5780636352211e146102c257600080fd5b8063291d6490146102505780632f745c591461026357806333c41a901461027657600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc3660046118d7565b6103eb565b60405190151581526020015b60405180910390f35b6101de610416565b6040516101cd919061194c565b6101fe6101f936600461195f565b6104a8565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611994565b610535565b005b6008545b6040519081526020016101cd565b61022961024b3660046119be565b61064b565b61022961025e3660046119fa565b61067c565b61022f610271366004611994565b6106ca565b6101c161028436600461195f565b610760565b6102296102973660046119be565b6107d4565b61022f6102aa36600461195f565b6107ef565b6102296102bd366004611aa1565b610882565b6101fe6102d036600461195f565b6108c3565b6101de61093a565b61022f6102eb3660046119fa565b6109c8565b610229610a4f565b6102296103063660046119fa565b610a85565b600a546001600160a01b03166101fe565b61022961032a366004611aea565b610ad0565b6101de610bcd565b610229610345366004611b16565b610bdc565b610229610358366004611b52565b610be7565b6101de61036b36600461195f565b610c1f565b61022f600c5481565b6101c16103873660046119fa565b600e6020526000908152604090205460ff1681565b6101c16103aa366004611bce565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102296103e63660046119fa565b610cea565b60006001600160e01b0319821663780e9d6360e01b1480610410575061041082610d85565b92915050565b60606000805461042590611bf8565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611bf8565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b5050505050905090565b60006104b382610dd5565b6105195760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610540826108c3565b9050806001600160a01b0316836001600160a01b031614156105ae5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610510565b336001600160a01b03821614806105ca57506105ca81336103aa565b61063c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610510565b6106468383610df2565b505050565b6106553382610e60565b6106715760405162461bcd60e51b815260040161051090611c33565b610646838383610f4a565b600a546001600160a01b031633146106a65760405162461bcd60e51b815260040161051090611c84565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b60006106d5836109c8565b82106107375760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610510565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6000600c5482106107cb5760405162461bcd60e51b815260206004820152602f60248201527f4e46543a69734d696e7465643a20746f6b656e4964206f75747369646520636f60448201526e6c6c656374696f6e20626f756e647360881b6064820152608401610510565b61041082610dd5565b61064683838360405180602001604052806000815250610be7565b60006107fa60085490565b821061085d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610510565b6008828154811061087057610870611cb9565b90600052602060002001549050919050565b600a546001600160a01b031633146108ac5760405162461bcd60e51b815260040161051090611c84565b80516108bf90600d906020840190611828565b5050565b6000818152600260205260408120546001600160a01b0316806104105760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610510565b600d805461094790611bf8565b80601f016020809104026020016040519081016040528092919081815260200182805461097390611bf8565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b505050505081565b60006001600160a01b038216610a335760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610510565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610a795760405162461bcd60e51b815260040161051090611c84565b610a8360006110f5565b565b600a546001600160a01b03163314610aaf5760405162461bcd60e51b815260040161051090611c84565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b336000908152600e602052604090205460ff16610b555760405162461bcd60e51b815260206004820152603f60248201527f4e46543a6f6e6c7943726f776473616c653a206f6e6c792077686974656c697360448201527f746564202620656e61626c65642063726f776473616c6520616c6c6f776564006064820152608401610510565b610b5e82610dd5565b15610bb95760405162461bcd60e51b815260206004820152602560248201527f4e46543a6d696e743a204e46542068617320616c7265616479206265656e206d6044820152641a5b9d195960da1b6064820152608401610510565b600c548210156108bf576108bf8183611147565b60606001805461042590611bf8565b6108bf338383611161565b610bf13383610e60565b610c0d5760405162461bcd60e51b815260040161051090611c33565b610c1984848484611230565b50505050565b6060610c2a82610dd5565b610c8e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610510565b6000610c98611263565b90506000815111610cb85760405180602001604052806000815250610ce3565b80610cc284611272565b604051602001610cd3929190611ccf565b6040516020818303038152906040525b9392505050565b600a546001600160a01b03163314610d145760405162461bcd60e51b815260040161051090611c84565b6001600160a01b038116610d795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b610d82816110f5565b50565b60006001600160e01b031982166380ac58cd60e01b1480610db657506001600160e01b03198216635b5e139f60e01b145b8061041057506301ffc9a760e01b6001600160e01b0319831614610410565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e27826108c3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610e6b82610dd5565b610ecc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610510565b6000610ed7836108c3565b9050806001600160a01b0316846001600160a01b03161480610f125750836001600160a01b0316610f07846104a8565b6001600160a01b0316145b80610f4257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610f5d826108c3565b6001600160a01b031614610fc55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610510565b6001600160a01b0382166110275760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610510565b611032838383611370565b61103d600082610df2565b6001600160a01b0383166000908152600360205260408120805460019290611066908490611d14565b90915550506001600160a01b0382166000908152600360205260408120805460019290611094908490611d2b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6108bf828260405180602001604052806000815250611428565b816001600160a01b0316836001600160a01b031614156111c35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610510565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61123b848484610f4a565b6112478484848461145b565b610c195760405162461bcd60e51b815260040161051090611d43565b6060600d805461042590611bf8565b6060816112965750506040805180820190915260018152600360fc1b602082015290565b8160005b81156112c057806112aa81611d95565b91506112b99050600a83611dc6565b915061129a565b60008167ffffffffffffffff8111156112db576112db611a15565b6040519080825280601f01601f191660200182016040528015611305576020820181803683370190505b5090505b8415610f425761131a600183611d14565b9150611327600a86611dda565b611332906030611d2b565b60f81b81838151811061134757611347611cb9565b60200101906001600160f81b031916908160001a905350611369600a86611dc6565b9450611309565b6001600160a01b0383166113cb576113c681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6113ee565b816001600160a01b0316836001600160a01b0316146113ee576113ee8382611559565b6001600160a01b03821661140557610646816115f6565b826001600160a01b0316826001600160a01b0316146106465761064682826116a5565b61143283836116e9565b61143f600084848461145b565b6106465760405162461bcd60e51b815260040161051090611d43565b60006001600160a01b0384163b1561154e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061149f903390899088908890600401611dee565b6020604051808303816000875af19250505080156114da575060408051601f3d908101601f191682019092526114d791810190611e2b565b60015b611534573d808015611508576040519150601f19603f3d011682016040523d82523d6000602084013e61150d565b606091505b50805161152c5760405162461bcd60e51b815260040161051090611d43565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f42565b506001949350505050565b60006001611566846109c8565b6115709190611d14565b6000838152600760205260409020549091508082146115c3576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061160890600190611d14565b6000838152600960205260408120546008805493945090928490811061163057611630611cb9565b90600052602060002001549050806008838154811061165157611651611cb9565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061168957611689611e48565b6001900381819060005260206000200160009055905550505050565b60006116b0836109c8565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b03821661173f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610510565b61174881610dd5565b156117955760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610510565b6117a160008383611370565b6001600160a01b03821660009081526003602052604081208054600192906117ca908490611d2b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461183490611bf8565b90600052602060002090601f016020900481019282611856576000855561189c565b82601f1061186f57805160ff191683800117855561189c565b8280016001018555821561189c579182015b8281111561189c578251825591602001919060010190611881565b506118a89291506118ac565b5090565b5b808211156118a857600081556001016118ad565b6001600160e01b031981168114610d8257600080fd5b6000602082840312156118e957600080fd5b8135610ce3816118c1565b60005b8381101561190f5781810151838201526020016118f7565b83811115610c195750506000910152565b600081518084526119388160208601602086016118f4565b601f01601f19169290920160200192915050565b602081526000610ce36020830184611920565b60006020828403121561197157600080fd5b5035919050565b80356001600160a01b038116811461198f57600080fd5b919050565b600080604083850312156119a757600080fd5b6119b083611978565b946020939093013593505050565b6000806000606084860312156119d357600080fd5b6119dc84611978565b92506119ea60208501611978565b9150604084013590509250925092565b600060208284031215611a0c57600080fd5b610ce382611978565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4657611a46611a15565b604051601f8501601f19908116603f01168101908282118183101715611a6e57611a6e611a15565b81604052809350858152868686011115611a8757600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611ab357600080fd5b813567ffffffffffffffff811115611aca57600080fd5b8201601f81018413611adb57600080fd5b610f4284823560208401611a2b565b60008060408385031215611afd57600080fd5b82359150611b0d60208401611978565b90509250929050565b60008060408385031215611b2957600080fd5b611b3283611978565b915060208301358015158114611b4757600080fd5b809150509250929050565b60008060008060808587031215611b6857600080fd5b611b7185611978565b9350611b7f60208601611978565b925060408501359150606085013567ffffffffffffffff811115611ba257600080fd5b8501601f81018713611bb357600080fd5b611bc287823560208401611a2b565b91505092959194509250565b60008060408385031215611be157600080fd5b611bea83611978565b9150611b0d60208401611978565b600181811c90821680611c0c57607f821691505b60208210811415611c2d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008351611ce18184602088016118f4565b835190830190611cf58183602088016118f4565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611d2657611d26611cfe565b500390565b60008219821115611d3e57611d3e611cfe565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611da957611da9611cfe565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611dd557611dd5611db0565b500490565b600082611de957611de9611db0565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e2190830184611920565b9695505050505050565b600060208284031215611e3d57600080fd5b8151610ce3816118c1565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205d4bb3876fc06e8bab8ef8c9759e29dc0a1b3efe6069d629235455d20a5a2b2464736f6c634300080b0033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(
      _name,
      _symbol,
      _maxSupply,
      overrides || {}
    ) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _maxSupply,
      overrides || {}
    );
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
